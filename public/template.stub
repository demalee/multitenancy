server {
#default_server;
# default_server ipv6only=on;

        root /var/www/html/multitenancy/public/websites/{{PUBLIC_FOLDER}}/public;
        index index.php index.html index.htm;

        # Make site accessible from http://localhost/
        server_name {{DOMAIN}} www.{{DOMAIN}};

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                #try_files $uri $uri/ =404;
                #try_files $uri /index.html index.php;
                try_files $uri $uri/ /index.php?$query_string;
                # Uncomment to enable naxsi on this location
                # include /etc/nginx/naxsi.rules
        }
# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
        #location /RequestDenied {
        #       proxy_pass http://127.0.0.1:8080;
        #}

        #error_page 404 /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page 500 502 503 504 /50x.html;
        #location = /50x.html {
        #       root /usr/share/nginx/html;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
location ~ \.php$ {
                try_files $uri =404;
                #try_files $uri /index.html index.php;
                 fastcgi_split_path_info ^(.+\.php)(/.+)$;
        #       # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        #
        #       # With php5-cgi alone:
#               fastcgi_pass 127.0.0.1:9000;
        #       # With php5-fpm:
                fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
                deny all;
        }

        # deny access to .htaccess files, if Apache's document root
      # concurs with nginx's one
        #

        location ~ /\.ht {
                deny all;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
#    listen 443 ssl; # managed by Certbot
 #   ssl_certificate /etc/letsencrypt/live/{{DOMAIN}}/fullchain.pem; # managed by Certbot
   # ssl_certificate_key /etc/letsencrypt/live/{{DOMAIN}}/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
#server {
    #if ($host = {{DOMAIN}}) {
     #   return 301 https://$host$request_uri;
    #} # managed by Certbot


       # listen 80;
      #  listen [::]:80;

     #   server_name {{DOMAIN}};
    #return 404; # managed by Certbot
#}
